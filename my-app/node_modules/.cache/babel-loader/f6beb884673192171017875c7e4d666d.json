{"ast":null,"code":"import { authAPI, profileAPI, usersAPI } from \"../api/api\";\nlet ADD_Post = 'ADD-POST';\nlet SET_USER_PROFILE = 'SET_USER_PROFILE';\nlet SET_STATUS = 'SET_STATUS';\nlet DELETE_POST = 'DELETE_POST';\nlet SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'This is my first post',\n    likesCount: 25\n  }, {\n    id: 2,\n    message: 'Hi, how are you',\n    likesCount: 30\n  }, {\n    id: 3,\n    message: 'I am fine thanks)are you?',\n    likesCount: 35\n  }, {\n    id: 4,\n    message: 'Vsux',\n    likesCount: 35\n  }],\n  newPostText: '',\n  profile: null,\n  status: \"\"\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_Post:\n      let newPost = {\n        id: 5,\n        message: action.newPostText,\n        likesCount: 0\n      };\n      return { ...state,\n        posts: [...state.posts, newPost],\n        newPostText: ''\n      };\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case DELETE_POST:\n      {\n        return { ...state,\n          posts: state.posts.filter(p => p.id != action.postId)\n        };\n      }\n\n    case SAVE_PHOTO_SUCCESS:\n      {\n        debugger;\n        return { ...state,\n          profile: { ...state.profile,\n            photos: action.photos\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = newPostText => ({\n  type: ADD_Post,\n  newPostText\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n});\nexport const savePhotoSuccess = photos => ({\n  type: SAVE_PHOTO_SUCCESS,\n  photos\n});\nexport const getUserProfile = userId => async dispatch => {\n  const response = await usersAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data));\n};\nexport const getStatus = status => async dispatch => {\n  const response = await profileAPI.getStatus(status);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  const response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport const savePhoto = file => async dispatch => {\n  const response = await profileAPI.savePhoto(file);\n\n  if (response.data.resultCode === 0) {\n    dispatch(savePhotoSuccess(response.data.data.photos));\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["C:/Users/Yevhelliy/Desktop/Work/learn/4/TMI/Final version/my-app/my-app/src/redux/profile-reducer.js"],"names":["authAPI","profileAPI","usersAPI","ADD_Post","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","initialState","posts","id","message","likesCount","newPostText","profile","status","profileReducer","state","action","type","newPost","filter","p","postId","photos","addPostActionCreator","setUserProfile","setStatus","deletePost","savePhotoSuccess","getUserProfile","userId","dispatch","response","getProfile","data","getStatus","updateStatus","resultCode","savePhoto","file"],"mappings":"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","sourcesContent":["import {authAPI, profileAPI, usersAPI} from \"../api/api\";\r\n\r\nlet ADD_Post = 'ADD-POST';\r\nlet SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nlet SET_STATUS = 'SET_STATUS';\r\nlet DELETE_POST = 'DELETE_POST';\r\nlet SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'This is my first post', likesCount: 25},\r\n        {id: 2, message: 'Hi, how are you', likesCount: 30},\r\n        {id: 3, message: 'I am fine thanks)are you?', likesCount: 35},\r\n        {id: 4, message: 'Vsux', likesCount: 35}\r\n    ],\r\n    newPostText: '',\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_Post:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        case  SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case  SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case  DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        case  SAVE_PHOTO_SUCCESS: {\r\n            debugger\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos }\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_Post, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(status)\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}