{"ast":null,"code":"import { profileAPI, usersAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 12\n  }, {\n    id: 2,\n    message: 'It\\'s my first post',\n    likesCount: 11\n  }, {\n    id: 3,\n    message: 'Blabla',\n    likesCount: 11\n  }, {\n    id: 4,\n    message: 'Dada',\n    likesCount: 11\n  }],\n  profile: null,\n  status: \"\"\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 5,\n          message: action.newPostText,\n          likesCount: 0\n        };\n        return { ...state,\n          posts: [...state.posts, newPost],\n          newPostText: ''\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(p => p.id != action.postId)\n      };\n\n    case SAVE_PHOTO_SUCCESS:\n      debugger;\n      return { ...state,\n        profile: { ...state.profile,\n          photos: action.photos\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n});\nexport const savePhotoSuccess = photos => ({\n  type: SAVE_PHOTO_SUCCESS,\n  photos\n});\nexport const getUserProfile = userId => async dispatch => {\n  const response = await usersAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data));\n};\nexport const getStatus = userId => async dispatch => {\n  let response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  let response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport const savePhoto = file => async dispatch => {\n  let response = await profileAPI.savePhoto(file);\n\n  if (response.data.resultCode === 0) {\n    dispatch(savePhotoSuccess(response.data.data.photos));\n  }\n};\nexport const saveProfile = profile => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  const response = await profileAPI.saveProfile(profile);\n\n  if (response.data.resultCode === 0) {\n    dispatch(getUserProfile(userId));\n  } else {\n    dispatch(stopSubmit(\"edit-profile\", {\n      _error: response.data.messages[0]\n    }));\n    return Promise.reject(response.data.messages[0]);\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["C:/Users/Yevhelliy/Desktop/Work/learn/4/TMI/Final version/my-app/my-app/src/redux/profile-reducer.js"],"names":["profileAPI","usersAPI","stopSubmit","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","initialState","posts","id","message","likesCount","profile","status","profileReducer","state","action","type","newPost","newPostText","filter","p","postId","photos","addPostActionCreator","setUserProfile","setStatus","deletePost","savePhotoSuccess","getUserProfile","userId","dispatch","response","getProfile","data","getStatus","updateStatus","resultCode","savePhoto","file","saveProfile","getState","auth","_error","messages","Promise","reject"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            debugger;\r\n            return {...state, profile: {...state.profile, photos: action.photos }}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}