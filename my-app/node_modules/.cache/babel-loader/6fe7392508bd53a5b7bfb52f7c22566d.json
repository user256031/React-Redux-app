{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yevhelliy\\\\Desktop\\\\Work\\\\learn\\\\4\\\\TMI\\\\Final version\\\\my-app\\\\my-app\\\\src\\\\components\\\\Profile\\\\Profile-Container.jsx\";\nimport React from \"react\";\nimport Profile from \"./Profile\";\nimport { getStatus, getUserProfile, savePhoto, updateStatus } from \"../../redux/profile-reducer\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.userId;\n\n    if (userId === \"0\") {\n      userId = this.props.authorizedUserId;\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.userId != prevProps.userId) this.refreshProfile();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n      isOwner: this.props.userId === \"0\",\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus,\n      savePhoto: this.props.savePhoto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getStatus,\n  updateStatus,\n  savePhoto\n}), withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["C:/Users/Yevhelliy/Desktop/Work/learn/4/TMI/Final version/my-app/my-app/src/components/Profile/Profile-Container.jsx"],"names":["React","Profile","getStatus","getUserProfile","savePhoto","updateStatus","connect","withAuthRedirect","compose","ProfileContainer","Component","refreshProfile","userId","props","authorizedUserId","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","profile","status","mapStateToProps","state","profilePage","auth","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,SAAR,EAAmBC,cAAnB,EAAmCC,SAAnC,EAA8CC,YAA9C,QAAiE,6BAAjE;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;;;AAEA,MAAMC,gBAAN,SAA+BT,KAAK,CAACU,SAArC,CAA+C;AAC3CC,EAAAA,cAAc,GAAG;AACb,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAAxB;;AACA,QAAIA,MAAM,KAAK,GAAf,EAAoB;AAChBA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWC,gBAApB;AACH;;AACD,SAAKD,KAAL,CAAWV,cAAX,CAA0BS,MAA1B;AACA,SAAKC,KAAL,CAAWX,SAAX,CAAqBU,MAArB;AACH;;AAEDG,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,cAAL;AACH;;AAEDK,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,QAAI,KAAKN,KAAL,CAAWD,MAAX,IAAqBK,SAAS,CAACL,MAAnC,EACI,KAAKD,cAAL;AACP;;AAGDS,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,OAAD,OAAa,KAAKP,KAAlB;AACS,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWD,MAAX,KAAsB,GADxC;AAES,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWQ,OAF7B;AAGS,MAAA,MAAM,EAAE,KAAKR,KAAL,CAAWS,MAH5B;AAIS,MAAA,YAAY,EAAE,KAAKT,KAAL,CAAWR,YAJlC;AAKS,MAAA,SAAS,EAAE,KAAKQ,KAAL,CAAWT;AAL/B;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA7B0C;;AAgC/C,IAAImB,eAAe,GAAIC,KAAD,KAAY;AAC9BH,EAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADG;AAE9BC,EAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH,MAFI;AAG9BR,EAAAA,gBAAgB,EAAEU,KAAK,CAACE,IAAN,CAAWd,MAHC;AAI9Be,EAAAA,MAAM,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAJW,CAAZ,CAAtB;;AAQA,eAAenB,OAAO,CAClBF,OAAO,CAACiB,eAAD,EAAkB;AAACpB,EAAAA,cAAD;AAAiBD,EAAAA,SAAjB;AAA4BG,EAAAA,YAA5B;AAA0CD,EAAAA;AAA1C,CAAlB,CADW,EAElBG,gBAFkB,CAAP,CAGbE,gBAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.userId;\r\n        if (userId === \"0\") {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.userId != prevProps.userId)\r\n            this.refreshProfile();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={this.props.userId === \"0\"}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto} />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n"]},"metadata":{},"sourceType":"module"}