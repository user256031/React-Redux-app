{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yevhelliy\\\\Desktop\\\\Work\\\\learn\\\\4\\\\TMI\\\\Final version\\\\my-app\\\\my-app\\\\src\\\\components\\\\Users\\\\Users-Container.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, setCurrentPage, setUsers, setTotalUsersCount, toggleIsFetching, unfollow, toggleFollowingProgress, requestUsers } from \"../../redux/users-reducer\";\nimport Users from './Users';\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { compose } from \"redux\";\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUserCount, getUsers } from \"../../redux/users-selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChanged = pageNumber => {\n      const {\n        pageSize\n      } = this.props;\n      this.props.getUsers(pageNumber, pageSize);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      currentPage,\n      pageSize\n    } = this.props;\n    this.props.getUsers(currentPage, pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        followingInProgress: this.props.followingInProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUserCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching,\n  toggleFollowingProgress,\n  getUsers: requestUsers\n}))(UsersContainer);","map":{"version":3,"sources":["C:/Users/Yevhelliy/Desktop/Work/learn/4/TMI/Final version/my-app/my-app/src/components/Users/Users-Container.jsx"],"names":["React","connect","follow","setCurrentPage","setUsers","setTotalUsersCount","toggleIsFetching","unfollow","toggleFollowingProgress","requestUsers","Users","Preloader","compose","getCurrentPage","getFollowingInProgress","getIsFetching","getPageSize","getTotalUserCount","getUsers","UsersContainer","Component","onPageChanged","pageNumber","pageSize","props","componentDidMount","currentPage","render","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,MADJ,EAEIC,cAFJ,EAGIC,QAHJ,EAIIC,kBAJJ,EAKIC,gBALJ,EAMIC,QANJ,EAOIC,uBAPJ,EAQIC,YARJ,QASO,2BATP;AAUA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SACIC,cADJ,EAEIC,sBAFJ,EAGIC,aAHJ,EAIIC,WAJJ,EAKIC,iBALJ,EAKuBC,QALvB,QAMO,6BANP;;;;AAQA,MAAMC,cAAN,SAA6BnB,KAAK,CAACoB,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAOzCC,aAPyC,GAOxBC,UAAD,IAAgB;AAC5B,YAAM;AAACC,QAAAA;AAAD,UAAa,KAAKC,KAAxB;AACA,WAAKA,KAAL,CAAWN,QAAX,CAAoBI,UAApB,EAAgCC,QAAhC;AACH,KAVwC;AAAA;;AAEzCE,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACC,MAAAA,WAAD;AAAcH,MAAAA;AAAd,QAA0B,KAAKC,KAArC;AACA,SAAKA,KAAL,CAAWN,QAAX,CAAoBQ,WAApB,EAAiCH,QAAjC;AACH;;AAODI,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,iBACF,KAAKH,KAAL,CAAWI,UAAX,gBACG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADH,GACkB,IAFhB,eAGH,QAAC,KAAD;AAAO,QAAA,eAAe,EAAE,KAAKJ,KAAL,CAAWK,eAAnC;AACO,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWD,QAD5B;AAEO,QAAA,WAAW,EAAE,KAAKC,KAAL,CAAWE,WAF/B;AAGO,QAAA,aAAa,EAAE,KAAKL,aAH3B;AAIO,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWM,KAJzB;AAKO,QAAA,MAAM,EAAE,KAAKN,KAAL,CAAWtB,MAL1B;AAMO,QAAA,QAAQ,EAAE,KAAKsB,KAAL,CAAWjB,QAN5B;AAOO,QAAA,mBAAmB,EAAE,KAAKiB,KAAL,CAAWO;AAPvC;AAAA;AAAA;AAAA;AAAA,cAHG;AAAA,oBAAP;AAYH;;AAzBwC;;AA4B7C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHH,IAAAA,KAAK,EAAEZ,QAAQ,CAACe,KAAD,CADZ;AAEHV,IAAAA,QAAQ,EAAEP,WAAW,CAACiB,KAAD,CAFlB;AAGHJ,IAAAA,eAAe,EAAEZ,iBAAiB,CAACgB,KAAD,CAH/B;AAIHP,IAAAA,WAAW,EAAEb,cAAc,CAACoB,KAAD,CAJxB;AAKHL,IAAAA,UAAU,EAAEb,aAAa,CAACkB,KAAD,CALtB;AAMHF,IAAAA,mBAAmB,EAAEjB,sBAAsB,CAACmB,KAAD;AANxC,GAAP;AAQH,CATD;;AAWA,eAAerB,OAAO,CAClBX,OAAO,CAAC+B,eAAD,EAAkB;AACrB9B,EAAAA,MADqB;AACbK,EAAAA,QADa;AACHH,EAAAA,QADG;AAErBD,EAAAA,cAFqB;AAELE,EAAAA,kBAFK;AAEeC,EAAAA,gBAFf;AAGrBE,EAAAA,uBAHqB;AAGIU,EAAAA,QAAQ,EAAET;AAHd,CAAlB,CADW,CAAP,CAMbU,cANa,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setUsers,\r\n    setTotalUsersCount,\r\n    toggleIsFetching,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from \"../../redux/users-reducer\";\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUserCount, getUsers,\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ?\r\n                <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow, setUsers,\r\n        setCurrentPage, setTotalUsersCount, toggleIsFetching,\r\n        toggleFollowingProgress, getUsers: requestUsers\r\n    })\r\n)(UsersContainer)"]},"metadata":{},"sourceType":"module"}