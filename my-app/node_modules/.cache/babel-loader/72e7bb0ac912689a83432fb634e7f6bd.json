{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yevhelliy\\\\Desktop\\\\Work\\\\learn\\\\4\\\\TMI\\\\Final version\\\\my-app\\\\my-app\\\\src\\\\components\\\\Login\\\\Login.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { createField, Input } from \"../common/FormsControls/FormsControls\";\nimport { required } from \"../../utils/validators/validators\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/auth-reducer\";\nimport { Navigate } from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = _ref => {\n  let {\n    handleSubmit,\n    error,\n    captchaUrl\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [createField(\"Email\", \"email\", [required], Input), createField(\"Password\", \"password\", [required], Input, {\n      type: \"password\"\n    }), createField(null, \"rememberMe\", [], Input, {\n      type: \"checkbox\"\n    }, \"remember me\"), captchaUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: captchaUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }, this), captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {}), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.formSummaryError,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LoginForm;\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoginReduxForm, {\n      onSubmit: onSubmit,\n      captchaUrl: props.captchaUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 12\n  }, this);\n};\n\n_c2 = Login;\n\nconst mapStateToProps = state => ({\n  captchaUrl: state.auth.captchaUrl,\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["C:/Users/Yevhelliy/Desktop/Work/learn/4/TMI/Final version/my-app/my-app/src/components/Login/Login.jsx"],"names":["React","Field","reduxForm","createField","Input","required","connect","login","Navigate","style","LoginForm","handleSubmit","error","captchaUrl","type","formSummaryError","LoginReduxForm","form","Login","props","onSubmit","formData","email","password","rememberMe","captcha","isAuth","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;AACA,SAAQC,WAAR,EAAqBC,KAArB,QAAiC,uCAAjC;AACA,SAAQC,QAAR,QAAuB,mCAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,0BAApB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,oDAAlB;;;AAEA,MAAMC,SAAS,GAAG,QAAuC;AAAA,MAAtC;AAACC,IAAAA,YAAD;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA;AAAtB,GAAsC;AACrD,sBACI;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAAA,eACKR,WAAW,CAAC,OAAD,EAAU,OAAV,EAAmB,CAACE,QAAD,CAAnB,EAA+BD,KAA/B,CADhB,EAEKD,WAAW,CAAC,UAAD,EAAa,UAAb,EAAyB,CAACE,QAAD,CAAzB,EAAqCD,KAArC,EAA4C;AAACU,MAAAA,IAAI,EAAE;AAAP,KAA5C,CAFhB,EAGKX,WAAW,CAAC,IAAD,EAAO,YAAP,EAAqB,EAArB,EAAyBC,KAAzB,EAAgC;AAACU,MAAAA,IAAI,EAAE;AAAP,KAAhC,EAAoD,aAApD,CAHhB,EAKMD,UAAU,iBAAI;AAAK,MAAA,GAAG,EAAEA;AAAV;AAAA;AAAA;AAAA;AAAA,YALpB,EAMMA,UAAU,IAAKV,WAAW,CAAC,oBAAD,EAAuB,SAAvB,EAAkC,CAACE,QAAD,CAAlC,EAA8CD,KAA9C,EAAqD,EAArD,CANhC,EASKQ,KAAK,iBAAI;AAAK,MAAA,SAAS,EAAEH,KAAK,CAACM,gBAAtB;AAAA,gBACLH;AADK;AAAA;AAAA;AAAA;AAAA,YATd,eAaI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CApBD;;KAAMF,S;AAsBN,MAAMM,cAAc,GAAGd,SAAS,CAAC;AAACe,EAAAA,IAAI,EAAE;AAAP,CAAD,CAAT,CAA2BP,SAA3B,CAAvB;;AAEA,MAAMQ,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC3BF,IAAAA,KAAK,CAACZ,KAAN,CAAYc,QAAQ,CAACC,KAArB,EAA4BD,QAAQ,CAACE,QAArC,EAA+CF,QAAQ,CAACG,UAAxD,EAAoEH,QAAQ,CAACI,OAA7E;AACH,GAFD;;AAIA,MAAIN,KAAK,CAACO,MAAV,EAAkB;AACd,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBAAO;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEN,QAA1B;AAAoC,MAAA,UAAU,EAAED,KAAK,CAACN;AAAtD;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH,CAbD;;MAAMK,K;;AAcN,MAAMS,eAAe,GAAIC,KAAD,KAAY;AAChCf,EAAAA,UAAU,EAAEe,KAAK,CAACC,IAAN,CAAWhB,UADS;AAEhCa,EAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH;AAFa,CAAZ,CAAxB;;AAKA,eAAepB,OAAO,CAACqB,eAAD,EAAkB;AAACpB,EAAAA;AAAD,CAAlB,CAAP,CAAkCW,KAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            { captchaUrl && <img src={captchaUrl} />}\r\n            { captchaUrl &&  createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\r\n\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Navigate to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"]},"metadata":{},"sourceType":"module"}