{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yevhelliy\\\\Desktop\\\\Work\\\\learn\\\\4\\\\TMI\\\\Final version\\\\my-app\\\\my-app\\\\src\\\\components\\\\common\\\\Paginator\\\\Paginator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from './Paginator.module.css';\nimport cn from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet Paginator = _ref => {\n  _s();\n\n  let {\n    totalItemsCount,\n    pageSize,\n    currentPage,\n    onPageChanged,\n    portionSize = 10\n  } = _ref;\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  debugger;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.paginator,\n    children: [portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber - 1);\n      },\n      children: \"PREV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: cn({\n          [styles.selectedPage]: currentPage === p\n        }, styles.numbersPage),\n        onClick: e => {\n          onPageChanged(p);\n        },\n        children: p\n      }, p, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }, this);\n    }), portionCount > portionNumber && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber + 1);\n      },\n      children: \"NEXT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Paginator, \"8p8zb1vvZvsuWyQQS16DuuzsJLU=\");\n\n_c = Paginator;\nexport default Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"sources":["C:/Users/Yevhelliy/Desktop/Work/learn/4/TMI/Final version/my-app/my-app/src/components/common/Paginator/Paginator.jsx"],"names":["React","useState","styles","cn","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","map","selectedPage","numbersPage","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,EAAP,MAAe,YAAf;;;AAEA,IAAIC,SAAS,GAAG,QAA+E;AAAA;;AAAA,MAA9E;AAACC,IAAAA,eAAD;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA,WAA5B;AAAyCC,IAAAA,aAAzC;AAAwDC,IAAAA,WAAW,GAAG;AAAtE,GAA8E;AAC3F,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAjB;AAEA,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAElCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;AACA,MAAI,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,CAAD,CAAhD;AACC,MAAIkB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAtB,GAAoC,CAAhE;AACA,MAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAA7C;AACL;AACI,sBACI;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACmB,SAAvB;AAAA,eACKJ,aAAa,GAAG,CAAhB,iBACG;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAEC,QAAAA,gBAAgB,CAACD,aAAa,GAAE,CAAhB,CAAhB;AAAmC,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,EAIKJ,KAAK,CACDS,MADJ,CACWC,CAAC,IAAIA,CAAC,IAAIJ,qBAAL,IAA8BI,CAAC,IAAEH,sBADjD,EAEII,GAFJ,CAEQD,CAAC,IAAI;AACV,0BAAO;AAAM,QAAA,SAAS,EAAGpB,EAAE,CAAC;AAC5B,WAACD,MAAM,CAACuB,YAAR,GAAuBlB,WAAW,KAAKgB;AADX,SAAD,EAExBrB,MAAM,CAACwB,WAFiB,CAApB;AAIM,QAAA,OAAO,EAAGC,CAAD,IAAO;AACZnB,UAAAA,aAAa,CAACe,CAAD,CAAb;AACH,SANP;AAAA,kBAMUA;AANV,SAGWA,CAHX;AAAA;AAAA;AAAA;AAAA,cAAP;AAOH,KAVA,CAJL,EAeFP,YAAY,GAAGC,aAAf,iBACF;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAEC,QAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBI;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAlCD;;GAAIb,S;;KAAAA,S;AAqCJ,eAAeA,SAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport styles from './Paginator.module.css'\r\nimport cn from \"classnames\"\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n     let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n     let rightPortionPageNumber = portionNumber * portionSize;\r\ndebugger\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 &&\r\n                <button onClick={() => { setPortionNumber(portionNumber -1)}}>PREV</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map(p => {\r\n                return <span className={ cn({\r\n                [styles.selectedPage]: currentPage === p\r\n                }, styles.numbersPage) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n    { portionCount > portionNumber &&\r\n    <button onClick={() => { setPortionNumber(portionNumber + 1) } }>NEXT</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}